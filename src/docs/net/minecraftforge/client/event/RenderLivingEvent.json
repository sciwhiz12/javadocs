[
    {
        "name" : "net.minecraftforge.client.event.RenderLivingEvent",
        "javadoc" : {
            "description" : [
                "<p>Fired when a {@link LivingEntity} is rendered.",
                "See the two subclasses to listen for before and after rendering.</p>"
            ],
            "tags" : {
                "param" : "<M> the {@link EntityModel<T>} for the living entity",
                "see" : "LivingRenderer"
            }
        },
        "methods" : [
            {
                "name" : "getEntity",
                "descriptor" : "()Lnet/minecraft/entity/LivingEntity;",
                "javadoc" : {
                    "description" : [
                        "<p>Returns the {@link LivingEntity} instance that is being rendered.</p>"
                    ],
                    "tags" : {
                        "return" : "the living entity being rendered"
                    }
                }
            },
            {
                "name" : "getRenderer",
                "descriptor" : "()Lnet/minecraft/client/renderer/entity/LivingRenderer;",
                "javadoc" : {
                    "description" : [
                        "<p>Returns the {@link LivingRenderer} for the living entity.</p>"
                    ],
                    "tags" : {
                        "return" : "The renderer for the living entity"
                    }
                }
            },
            {
                "name" : "getPartialRenderTick",
                "descriptor" : "()F",
                "javadoc" : {
                    "description" : [
                        "<p>Returns the partial amount of ticks between the last and next render tick.",
                        "This will be in the range of {@code 0.0F} to {@code 1.0F}.</p>"
                    ],
                    "tags" : {
                        "return" : "The amount of partial ticks"
                    }
                }
            },
            {
                "name" : "getMatrixStack",
                "descriptor" : "()Lcom/mojang/blaze3d/matrix/MatrixStack;",
                "javadoc" : {
                    "description" : [
                        "<p>Returns the {@link MatrixStack} used for transformations, rotations, and scaling in rendering.</p>"
                    ],
                    "tags" : {
                        "return" : "The matrix stack used for rendering"
                    }
                }
            },
            {
                "name" : "getBuffers",
                "descriptor" : "()Lnet/minecraft/client/renderer/IRenderTypeBuffer;",
                "javadoc" : {
                    "description" : [
                        "<p>Returns the {@link IRenderTypeBuffer} currently being used for rendering.</p>"
                    ],
                    "tags" : {
                        "return" : "The rendering buffers"
                    }
                }
            },
            {
                "name" : "getLight",
                "descriptor" : "()I",
                "javadoc" : {
                    "description" : [
                        "<p>Returns an integer packed with the sky and block light.",
                        "This is used in rendering to determine the color of the light level of the block, according to the light texture.</p>"
                    ],
                    "tags" : {
                        "return" : "The amount of packed light for rendering",
                        "see" : "net.minecraft.client.renderer.LightTexture#getLightSky(int)"
                    }
                }
            }
        ]
    },
    {
        "name" : "net.minecraftforge.client.event.RenderLivingEvent$Pre",
        "javadoc" : {
            "description" : [
                "<p>Fired <b>before</b> an entity is rendered.",
                "This can be used to render additional effects or suppress rendering.</p>",
                "",
                "<p>This event is {@linkplain net.minecraftforge.eventbus.api.Cancelable cancellable}, and <em>does not</em>",
                "{@linkplain HasResult have a result}.",
                "If this event is cancelled, then the entity will not be rendered and the corresponding {@link RenderLivingEvent.Post}",
                "event will not be fired.</p>",
                "",
                "<p>This event is fired on the {@linkplain net.minecraftforge.common.MinecraftForge#EVENT_BUS main Forge event bus},",
                "only on the <strong>{@linkplain net.minecraftforge.fml.LogicalSide#CLIENT logical client}</strong>.</p>"
            ],
            "tags" : {
                "param" : "<M> The {@link EntityModel<T>} for the living entity"
            }
        }
    },
    {
        "name" : "net.minecraftforge.client.event.RenderLivingEvent$Post",
        "javadoc" : {
            "description" : [
                "<p>Fired <b>after</b> an entity is rendered, if the corresponding {@link RenderLivingEvent.Post} is not cancelled.</p>",
                "",
                "<p>This event is <em>not</em> {@linkplain net.minecraftforge.eventbus.api.Cancelable cancellable}, and <em>does not</em>",
                "{@linkplain HasResult have a result}.</p>",
                "",
                "<p>This event is fired on the {@linkplain net.minecraftforge.common.MinecraftForge#EVENT_BUS main Forge event bus},",
                "only on the <strong>{@linkplain net.minecraftforge.fml.LogicalSide#CLIENT logical client}</strong>.</p>"
            ],
            "tags" : {
                "param" : "<M> The {@link EntityModel<T>} for the living entity"
            }
        }
    }
]